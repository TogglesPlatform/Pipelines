name: Create universal binary

inputs:
  tool-name:
    description: The name of the tool
    required: true

outputs:
  zip-filename:
    description: The filename of the generated .zip
    value: ${{ steps.zip-universal-binary.outputs.zip_filename }}
  zip-path:
    description: The path to .zip containing the universal binary
    value: ${{ steps.zip-universal-binary.outputs.zip_path }}

runs:
  using: composite
  steps:
    - name: Create bin folder
      shell: bash
      run: |
        rm -rf bin
        mkdir -p bin

    - name: Delete build artifacts
      shell: bash
      run: swift package clean

    - name: Build binary (arm64)
      shell: bash
      run: swift build -c release --arch arm64

    - name: Build binary (x86_64)
      shell: bash
      run: swift build -c release --arch x86_64

    - name: Create universal binary
      shell: bash
      run: |
        lipo -create -output \
          ${{ inputs.tool-name }} \
          .build/arm64-apple-macosx/release/${{ inputs.tool-name }} \
          .build/x86_64-apple-macosx/release/${{ inputs.tool-name }}

    - name: Move universal binary to bin folder
      shell: bash
      run: |
        mv ./${{ inputs.tool-name }} bin/${{ inputs.tool-name }}

    - name: Zip universal binary
      id: zip-universal-binary
      shell: bash
      working-directory: bin
      run: |
        zip -r ${{ env.ZIP_FILE }} ${{ inputs.tool-name }}
        echo "zip_filename=${{ env.ZIP_FILE }}" >> $GITHUB_OUTPUT
        echo "zip_path=bin/${{ env.ZIP_FILE }}" >> $GITHUB_OUTPUT
      env:
        ZIP_FILE: ${{ inputs.tool-name }}-macOS-universal-binary.zip
